rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    // Chats collection
    match /chats/{chatId} {
      allow read: if isAuthenticated() && 
        (resource.data.users[request.auth.uid] == true);
      allow create: if isAuthenticated() && 
        request.resource.data.users[request.auth.uid] == true;
      allow update: if isAuthenticated() && 
        resource.data.users[request.auth.uid] == true;
      allow delete: if isAuthenticated() && 
        resource.data.users[request.auth.uid] == true;
    }

    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated() && 
        exists(/databases/$(database)/documents/chats/$(resource.data.chatId)) &&
        get(/databases/$(database)/documents/chats/$(resource.data.chatId)).data.users[request.auth.uid] == true;
      allow create: if isAuthenticated() && 
        exists(/databases/$(database)/documents/chats/$(request.resource.data.chatId)) &&
        get(/databases/$(database)/documents/chats/$(request.resource.data.chatId)).data.users[request.auth.uid] == true;
      allow update: if isAuthenticated() && 
        resource.data.senderId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.senderId == request.auth.uid;
    }
  }
} 